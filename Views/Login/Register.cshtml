@model AgenziaSpedizioni.Models.Utente

@{
    ViewBag.Title = "Register";
}

<h2>Registrati</h2>

@using (Html.BeginForm("Register", "Login", FormMethod.Post, new { novalidate = "true" }))
{
    @Html.AntiForgeryToken()

    if (!ViewData.ModelState.IsValid)
    {
        @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
    }

    <div class="mb-3">
        @Html.LabelFor(model => model.Username, new { @class = "form-label" })
        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Username") ? "" : "is-invalid")}" } })
        @Html.ValidationMessageFor(model => model.Username, null, new { @class = "invalid-feedback" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Email, new { @class = "form-label" })
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Email") ? "" : "is-invalid")}" } })
        @Html.ValidationMessageFor(model => model.Email, null, new { @class = "invalid-feedback" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Password, new { @class = "form-label" })
        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Password") ? "" : "is-invalid")}" } })
        @Html.ValidationMessageFor(model => model.Password, null, new { @class = "invalid-feedback" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.CodiceFiscale, new { @class = "form-label" })
        @Html.EditorFor(model => model.CodiceFiscale, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("CodiceFiscale") ? "" : "is-invalid")}" } })
        @Html.ValidationMessageFor(model => model.CodiceFiscale, null, new { @class = "invalid-feedback" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Nome, new { @class = "form-label" })
        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Nome") ? "" : "is-invalid")}" } })
        @Html.ValidationMessageFor(model => model.Nome, null, new { @class = "invalid-feedback" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Cognome, new { @class = "form-label" })
        @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Cognome") ? "" : "is-invalid")}" } })
        @Html.ValidationMessageFor(model => model.Cognome, null, new { @class = "invalid-feedback" })
    </div>

    <button type="submit" class="btn btn-primary">Registrati</button>
}
